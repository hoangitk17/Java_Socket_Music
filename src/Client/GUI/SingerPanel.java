/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client.GUI;

import Server.Singer;
import chrriis.dj.nativeswing.swtimpl.NativeInterface;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Nguyen Van Hoang
 */
public class SingerPanel extends javax.swing.JPanel {

    /**
     * Creates new form AccountPanel
     */
    private final String NOT_FOUND = "notfound";
    private final String SEARCH = "first";
    private final String INFO_ARTIST = "infoartist";
    private final String SEARCH_PLACE_HOLDER = "Enter a singer name";
    private CardLayout cardLayout;
    Client client;
    JFrame parent;
    Singer singer;
    String keyWord = "";

    public SingerPanel() {
        initComponents();
        initCompCommon();
    }

    public SingerPanel(JFrame parent, Client client) {
        initComponents();
        // padding-left 10 px
        initCompCommon();
        this.client = client;
        this.parent = parent;
    }

    public void initCompCommon() {
        // padding-left 10 px
        textInputSearch.setBorder(
                javax.swing.BorderFactory.createCompoundBorder(
                        getBorder(),
                        javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 0)
                )
        );

        //set placeholder
        textInputSearch.setText(SEARCH_PLACE_HOLDER);
        textInputSearch.setForeground(Color.GRAY);
        textInputSearch.setBorder(
                javax.swing.BorderFactory.createCompoundBorder(
                        getBorder(),
                        javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 0)
                )
        );
        textInputSearch.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (textInputSearch.getText().equals(SEARCH_PLACE_HOLDER)) {
                    textInputSearch.setText("");
                    textInputSearch.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (textInputSearch.getText().isEmpty()) {
                    textInputSearch.setForeground(Color.GRAY);
                    textInputSearch.setText(SEARCH_PLACE_HOLDER);
                }
            }
        });
        // set scroll speed
        scroll.getVerticalScrollBar().setUnitIncrement(16);

        //init cardlayout
        cardLayout = (CardLayout) plCards.getLayout();
        cardLayout.show(plCards, SEARCH);

        //wrap text of JTextarea
        txtAlbum.setWrapStyleWord(true);
        txtAlbum.setLineWrap(true);
        txtSong.setWrapStyleWord(true);
        txtSong.setLineWrap(true);
        txtThongTinSuNghiep.setWrapStyleWord(true);
        txtThongTinSuNghiep.setLineWrap(true);
        txtTieuSu.setWrapStyleWord(true);
        txtTieuSu.setLineWrap(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleSearchSinger = new javax.swing.JLabel();
        scroll = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnSearch = new javax.swing.JLabel();
        textInputSearch = new javax.swing.JTextField();
        plCards = new javax.swing.JPanel();
        plNotFound = new javax.swing.JPanel();
        lbNoFoundSinger = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        listsSinger = new javax.swing.JList<>();
        plSearch = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        plInfoArtist = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAlbum = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtSong = new javax.swing.JTextArea();
        btnYoutube = new javax.swing.JButton();
        btnMp3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtTieuSu = new javax.swing.JTextArea();
        txtName = new javax.swing.JLabel();
        txtBirthDate = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtThongTinSuNghiep = new javax.swing.JTextArea();
        jLabel19 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setName("cardAccount"); // NOI18N
        setPreferredSize(new java.awt.Dimension(754, 561));

        titleSearchSinger.setBackground(new java.awt.Color(68, 142, 246));
        titleSearchSinger.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        titleSearchSinger.setForeground(new java.awt.Color(255, 255, 255));
        titleSearchSinger.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleSearchSinger.setText("Search Singer");
        titleSearchSinger.setOpaque(true);

        scroll.setBorder(null);
        scroll.setPreferredSize(new java.awt.Dimension(691, 784));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 771));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnSearch.setBackground(new java.awt.Color(0, 0, 0));
        btnSearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_search_23px_1.png"))); // NOI18N
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.setOpaque(true);
        btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnSearchMousePressed(evt);
            }
        });

        textInputSearch.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        textInputSearch.setBorder(null);
        textInputSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textInputSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(textInputSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textInputSearch)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)))
        );

        plCards.setBackground(new java.awt.Color(255, 255, 255));
        plCards.setLayout(new java.awt.CardLayout());

        plNotFound.setBackground(new java.awt.Color(255, 255, 255));

        lbNoFoundSinger.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        lbNoFoundSinger.setText("Không tìm thấy tên ca sĩ J97");

        jLabel2.setFont(new java.awt.Font("Roboto Mono", 0, 14)); // NOI18N
        jLabel2.setText("Danh sách ca sĩ gợi ý");

        jScrollPane5.setViewportView(listsSinger);

        javax.swing.GroupLayout plNotFoundLayout = new javax.swing.GroupLayout(plNotFound);
        plNotFound.setLayout(plNotFoundLayout);
        plNotFoundLayout.setHorizontalGroup(
            plNotFoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plNotFoundLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(plNotFoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
                    .addComponent(lbNoFoundSinger, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        plNotFoundLayout.setVerticalGroup(
            plNotFoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plNotFoundLayout.createSequentialGroup()
                .addComponent(lbNoFoundSinger, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(209, Short.MAX_VALUE))
        );

        plCards.add(plNotFound, "notfound");

        plSearch.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/search_singer.png"))); // NOI18N

        javax.swing.GroupLayout plSearchLayout = new javax.swing.GroupLayout(plSearch);
        plSearch.setLayout(plSearchLayout);
        plSearchLayout.setHorizontalGroup(
            plSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
        );
        plSearchLayout.setVerticalGroup(
            plSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        plCards.add(plSearch, "first");

        jLabel17.setFont(new java.awt.Font("Roboto Mono", 1, 14)); // NOI18N
        jLabel17.setText("Album");

        txtAlbum.setEditable(false);
        txtAlbum.setColumns(20);
        txtAlbum.setFont(new java.awt.Font("Roboto Mono", 0, 13)); // NOI18N
        txtAlbum.setRows(5);
        txtAlbum.setText("Không có thông tin về Album");
        jScrollPane3.setViewportView(txtAlbum);

        jLabel20.setFont(new java.awt.Font("Roboto Mono", 1, 14)); // NOI18N
        jLabel20.setText("Bài hát");

        txtSong.setEditable(false);
        txtSong.setColumns(20);
        txtSong.setFont(new java.awt.Font("Roboto Mono", 0, 13)); // NOI18N
        txtSong.setRows(5);
        txtSong.setText("Không có thông tin về bài hát");
        jScrollPane4.setViewportView(txtSong);

        btnYoutube.setBackground(new java.awt.Color(68, 142, 246));
        btnYoutube.setFont(new java.awt.Font("Roboto Mono", 0, 11)); // NOI18N
        btnYoutube.setForeground(new java.awt.Color(255, 255, 255));
        btnYoutube.setText("Xem video nổi bật");
        btnYoutube.setContentAreaFilled(false);
        btnYoutube.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnYoutube.setOpaque(true);
        btnYoutube.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYoutubeActionPerformed(evt);
            }
        });

        btnMp3.setBackground(new java.awt.Color(68, 142, 246));
        btnMp3.setFont(new java.awt.Font("Roboto Mono", 0, 11)); // NOI18N
        btnMp3.setForeground(new java.awt.Color(255, 255, 255));
        btnMp3.setText("Nghe bài hát nổi bật");
        btnMp3.setContentAreaFilled(false);
        btnMp3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMp3.setOpaque(true);
        btnMp3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMp3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(btnYoutube, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(btnMp3)
                        .addGap(22, 22, 22)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnYoutube, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMp3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4)
                .addContainerGap())
        );

        txtTieuSu.setEditable(false);
        txtTieuSu.setColumns(20);
        txtTieuSu.setFont(new java.awt.Font("Roboto Mono", 0, 13)); // NOI18N
        txtTieuSu.setRows(5);
        txtTieuSu.setText("Không có thông tin về tiểu sử");
        jScrollPane1.setViewportView(txtTieuSu);

        txtName.setFont(new java.awt.Font("Roboto Mono", 1, 14)); // NOI18N
        txtName.setText("Tên ca sĩ:");
        txtName.setAutoscrolls(true);

        txtBirthDate.setFont(new java.awt.Font("Roboto Mono", 1, 14)); // NOI18N
        txtBirthDate.setText("Ngày sinh:");

        jLabel16.setFont(new java.awt.Font("Roboto Mono", 1, 14)); // NOI18N
        jLabel16.setText("Nghệ sĩ");

        jLabel18.setFont(new java.awt.Font("Roboto Mono", 1, 14)); // NOI18N
        jLabel18.setText("Thông tin sự nghiệp");

        txtThongTinSuNghiep.setEditable(false);
        txtThongTinSuNghiep.setColumns(20);
        txtThongTinSuNghiep.setFont(new java.awt.Font("Roboto Mono", 0, 13)); // NOI18N
        txtThongTinSuNghiep.setRows(5);
        txtThongTinSuNghiep.setText("Không có thông tin về sự nghiệp");
        jScrollPane2.setViewportView(txtThongTinSuNghiep);

        jLabel19.setFont(new java.awt.Font("Roboto Mono", 1, 14)); // NOI18N
        jLabel19.setText("Tiểu sử");

        javax.swing.GroupLayout plInfoArtistLayout = new javax.swing.GroupLayout(plInfoArtist);
        plInfoArtist.setLayout(plInfoArtistLayout);
        plInfoArtistLayout.setHorizontalGroup(
            plInfoArtistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plInfoArtistLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(plInfoArtistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(plInfoArtistLayout.createSequentialGroup()
                        .addGroup(plInfoArtistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBirthDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                            .addGroup(plInfoArtistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                                .addComponent(jScrollPane1))
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(plInfoArtistLayout.createSequentialGroup()
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        plInfoArtistLayout.setVerticalGroup(
            plInfoArtistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plInfoArtistLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(plInfoArtistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(plInfoArtistLayout.createSequentialGroup()
                        .addComponent(txtBirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        plCards.add(plInfoArtist, "infoartist");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
            .addComponent(plCards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(plCards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        scroll.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleSearchSinger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleSearchSinger, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textInputSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textInputSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textInputSearchActionPerformed

    public void showSingerExactly(Singer singer) {
        System.out.println("Show singer");
        this.singer = singer;
        cardLayout.show(plCards, INFO_ARTIST);
        txtName.setText(singer.getName().trim());
        txtBirthDate.setText(singer.getDateBirth());
        txtThongTinSuNghiep.setText(singer.getSuNghiep());
        txtTieuSu.setText(singer.getTieuSu());
        txtSong.setText(singer.getListSong());
        txtAlbum.setText(singer.getListMV());
    }

    public void showSingerNearCorrect(ArrayList<String> list) {
        System.out.println("Show song near correct");
        lbNoFoundSinger.setText("Không tìm thấy tên ca sĩ " + keyWord);
        DefaultListModel<String> listModel = new DefaultListModel<>();

        for (String singerName : list) {
            listModel.addElement(singerName);
        }
        listsSinger.setModel(listModel);
        listsSinger.setCellRenderer(new SingerRenderer());
        listsSinger.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        listsSinger.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                JList list = (JList) evt.getSource();
                if (evt.getClickCount() == 2) {
                    // Double-click detected
                    int index = list.locationToIndex(evt.getPoint());
                    System.out.println("Click " + listsSinger.getSelectedValue());
                    if (listsSinger.getSelectedValue() != null) {
                        SearchSingerWithNameExactly(listsSinger.getSelectedValue());
                    }
                }
            }
        });
        cardLayout.show(plCards, NOT_FOUND);
    }

    public void SearchSingerWithNameExactly(String name) {
        try {
            //handle when server shutdown
            if (Client.isConnectionReset == 1) {
                JOptionPane.showMessageDialog(this, "Server Connection reset");
                client.send.message = "bye";
                client.send.flag = true;
                Client.isConnectionReset = 0;
                new LogIn();
                parent.dispose();
                return;
            }
            System.out.println("Click-exactly");
            keyWord = name;
            client.send.message = "key:singer:" + name;
            client.send.flag = true;
            String message;
            LoadingDialog load = new LoadingDialog(parent, true, LoadingDialog.FLAG_SONG);
            while (true) {
                message = new String(Client.singerFlag);
                if (!message.equals("")) {
                    switch (message) {
                        case "exactly": {
                            showSingerExactly(Client.singer);
                            System.out.println("Exactly");
                        }
                        break;
                        case "nearly": {
                            showSingerNearCorrect(Client.listsSinger);
                            System.out.println("Nearly");
                        }
                        break;
                        case "nosinger": {
                            JOptionPane.showMessageDialog(this, "Không tìm thấy ca sĩ nào.");
                            System.out.println("No singer");
                        }
                        break;
                    }
                    Client.singer = null;
                    Client.singerFlag = "";
                    Client.listsSinger = null;
                    break;
                }

            }
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    private void btnSearchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMousePressed
        // TODO add your handling code here:
        try {  //handle when server shutdown
            String keyword = textInputSearch.getText();
            if (keyword.equals("") || keyword.equals(SEARCH_PLACE_HOLDER)) {
                cardLayout.show(plCards, SEARCH);
                return;
            }
            if (Client.isConnectionReset == 1) {
                JOptionPane.showMessageDialog(this, "Server Connection reset");
                client.send.message = "bye";
                client.send.flag = true;
                Client.isConnectionReset = 0;
                new LogIn();
                parent.dispose();
                return;
            }
            System.out.println("click");

            keyWord = keyword;
            client.send.message = "key:singer:" + keyword;
            client.send.flag = true;
            String message;
            LoadingDialog load = new LoadingDialog(parent, true, LoadingDialog.FLAG_SINGER);
            System.out.println("finish loading");
            while (true) {
                message = new String(Client.singerFlag);
                if (!message.equals("")) {
                    switch (message) {
                        case "exactly": {
                            showSingerExactly(Client.singer);
                            System.out.println("Exactly");
                        }
                        break;
                        case "nearly": {
                            showSingerNearCorrect(Client.listsSinger);
                            System.out.println("Nearly");
                        }
                        break;
                        case "nosinger": {
                            cardLayout.show(plCards, SEARCH);
                            JOptionPane.showMessageDialog(this, "Không tìm thấy ca sĩ nào.");
                            System.out.println("No singer");
                            
                        }
                        break;
                    }
                    Client.singer = null;
                    Client.singerFlag = "";
                    Client.listsSinger = null;
                    break;
                }

            }
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_btnSearchMousePressed

    private void btnMp3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMp3ActionPerformed
        // TODO add your handling code here:
        try {

            if (singer == null) {
                JOptionPane.showMessageDialog(this, "Bạn chưa chọn bài hát để nghe");
            } else {
                if (singer.getMp3() != null) {
                    new MP3DialogNew(parent, true, singer.getMp3()).setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Không có file mp3.");
                }
            }

        } catch (Exception e) {

        }
    }//GEN-LAST:event_btnMp3ActionPerformed

    private void btnYoutubeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYoutubeActionPerformed
        // TODO add your handling code here:
        //https://sourceforge.net/p/djproject/discussion/671154/thread/e813001e/
        try {
            if (!NativeInterface.isOpen()) {
                NativeInterface.open();
                new Thread(new Runnable() {
                    public void run() {
                        NativeInterface.runEventPump();
                    }
                }).start();

            }
            if (singer == null) {
                JOptionPane.showMessageDialog(this, "Bạn chưa chọn bài hát để xem");
            } else {
                if (singer.getYoutube() != null) {
//                    if (song.isHasKey()) {
//                    new YoutubeViewerDialog(parent, true, song.getIDYoutube() + ";fs=1").setVisible(true);
//                    } else {
                    new YoutubeViewerDialog(parent, true, "https://www.youtube.com/embed/" + singer.getYoutube()).setVisible(true);
//                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Bài hát không có video");
                }
            }

            // don't forget to properly close native components
            Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {
                @Override
                public void run() {
                    NativeInterface.close();
                }
            }));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnYoutubeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMp3;
    private javax.swing.JLabel btnSearch;
    private javax.swing.JButton btnYoutube;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lbNoFoundSinger;
    private javax.swing.JList<String> listsSinger;
    private javax.swing.JPanel plCards;
    private javax.swing.JPanel plInfoArtist;
    private javax.swing.JPanel plNotFound;
    private javax.swing.JPanel plSearch;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JTextField textInputSearch;
    private javax.swing.JLabel titleSearchSinger;
    private javax.swing.JTextArea txtAlbum;
    private javax.swing.JLabel txtBirthDate;
    private javax.swing.JLabel txtName;
    private javax.swing.JTextArea txtSong;
    private javax.swing.JTextArea txtThongTinSuNghiep;
    private javax.swing.JTextArea txtTieuSu;
    // End of variables declaration//GEN-END:variables
}
